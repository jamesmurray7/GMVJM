% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynPred.R
\name{dynPred}
\alias{dynPred}
\title{Dynamic predictions for survival sub-model in a multivariate joint model.}
\usage{
dynPred(
  data,
  id,
  fit,
  u = NULL,
  nsim = 200,
  progress = TRUE,
  scale = NULL,
  df = NULL
)
}
\arguments{
\item{data}{the data to which the original \code{joint} model was fit.}

\item{id}{subject identifier, i.e. for which subject is the conditional survival probabilities 
desired?}

\item{fit}{a joint model fit by the  \code{joint} function.}

\item{u}{a numeric \code{vector} of candidate follow-up times for which a survival probability 
should be calculated. Note that the first item \code{u[1]} denotes the start of the "window"
and is dropped from calculations. If \code{u=NULL} (the default), then the probability of 
surviving all failure times after the \code{id}'s final longitudinal \code{time} is calculated.}

\item{nsim}{how many Monte Carlo simulations should be carried out? Defaults to 
\code{nsim=200}. First-order estimates are calculated if \code{nsim=0}.}

\item{progress}{a logical, if \code{progress=TRUE} (the default) then a progress bar displaying
the current percentage of simulations have been completed.}

\item{scale}{numeric scales the variance-covariance parameter in the proposal distribution for 
the Metropolis-Hastings algorithm. Defaults to \code{scale = NULL} which doesn't scale the
variance term at all. Users are encouraged to experiment with values here; this parameter
controls the acceptance rate of the MH scheme.}

\item{df}{numeric denotes the degrees of freedom of the proposed \eqn{t} distribution on
the random effects; \code{df=4} is suggested and is the default.}
}
\value{
A list of class \code{dynPred} which consists of three items: \describe{
  \item{\code{pi}}{A \code{data.frame} which contains each candidate failure time (supplied by
  \code{u}), with the mean, median and 2.5\% and 97.5\% quantiles of probability of survival 
  until this failure time.}
  \item{\code{pi.raw}}{A \code{matrix} of with \code{nsim} rows and \code{length(u)} columns,
  each row represents the \eqn{l}th conditional survival probability of survival each \code{u}
  survival time. This is largely for debugging purposes.}
  \item{MH.accept}{The acceptance rate of the Metropolis-Hastings algorithm on the random
  effects.}
}
}
\description{
Calculates individualised conditional survival probabilities for subjects
during a period of follow-up using a \code{joint} model fit along with requisite longitudinal 
process history. 

\strong{Note} that this function is largely designed for use within the ROC function
which assesses discriminatory power of the joint model, however it \emph{does} function
by itself with proper use of its arguments.
}
\details{
Dynamic predictions for the time-to-event process based on information available
on the subject's longitudinal process up to given time \eqn{t} are calculated by Monte Carlo
simulation outlined in Rizopoulos (2011). For a subject last observed at time \eqn{t}, the 
probability that they survive until future time \eqn{u} is

\deqn{
  Pr(T_i \ge u | T \ge t; \boldsymbol{Y}_i, \boldsymbol{b}_i; \boldsymbol{\Omega}) \approx
  \frac{S(u|\hat{\boldsymbol{b}}_i; \boldsymbol{\Omega})}
  {S(t|\hat{\boldsymbol{b}}_i; \boldsymbol{\Omega})}
}
where \eqn{T_i} is the true failure time for subject \eqn{i}, \eqn{\boldsymbol{Y}_i} their
longitudinal measurements up to time \eqn{t}, and \eqn{S()} the survival function.

\eqn{\boldsymbol{\Omega}} is drawn from the multivariate normal distribution with mean
\eqn{\hat{\boldsymbol{\Omega}}} and its variance taken from a fitted \code{joint} object.
\eqn{\hat{\boldsymbol{b}}} is drawn from the \eqn{t} distribution by means of a
Metropolis-Hastings algorithm with \code{nsim} iterations.
}
\examples{
\donttest{
data(PBC)
PBC$serBilir <- log(PBC$serBilir)
# Focus in on id 81, who fails at around 7 years of follow-up. \code{dynPred} allows us to
# infer how the model believes their survival probability would've progressed (ignoring the
# true outcome at start time).
# Univariate -----------------------------------------------------------
long.formulas <- list(serBilir ~ drug * time + (1 + time|id))
surv.formula <- Surv(survtime, status) ~ drug
family <- list('gaussian')
fit <- joint(long.formulas, surv.formula, PBC, family)
preds <- dynPred(PBC, id = 81, fit = fit, u = NULL, nsim = 200,
                 scale = 2)
preds
plot(preds)
# Bivariate ------------------------------------------------------------
# Does introduction of albumin affect conditional survival probability?
long.formulas <- list(
  serBilir ~ drug * time + I(time^2) + (1 + time + I(time^2)|id),
  albumin ~ drug * time + (1 + time|id)
)
fit <- joint(long.formulas, surv.formula, data = PBC, family = list("gaussian", "gaussian"))
bi.preds <- dynPred(PBC, id = 81, fit = fit, u = NULL, nsim = 200, 
                    scale = fit$coeffs$D/sqrt(fit$ModelInfo$n))
bi.preds
plot(bi.preds) # Appears to level-off dramatically; perhaps indicative of this id's albumin
               # levels, or acceleration in serBilir trajectory around 8.5 years.
}
}
\references{
Bernhardt PW, Zhang D and Wang HJ. A fast EM Algorithm for Fitting Joint Models of a Binary 
Response to Multiple Longitudinal Covariates Subject to Detection Limits. 
\emph{Computational Statistics and Data Analysis} 2015; \strong{85}; 37--53

Rizopoulos D. Dynamic predictions and prospective accuracy in joint models
for longitudinal and time-to-event data. \emph{Biometrics} 2011;
\strong{67}: 819â€“829.
}
\seealso{
\code{\link{ROC}} and \code{\link{plot.dynPred}}.
}
\author{
James Murray (\email{j.murray7@ncl.ac.uk}).
}
